ruby:
  if f.object.persisted?
    link = boutique.product_url(f.object, only_path: false)
    right = cell('folio/console/clipboard_copy',
                 link,
                 as_button: true,
                 button_variant: "btn-secondary",
                 button_label: t('.copy_link')).show
  else
    right = nil
  end

= form_header f, right:

= tabs [:content]

.tab-content
  = tab :content
    .row
      .col-md-auto
        = react_picker(f, :cover_placement)
      .col-md
        == cell('folio/console/publishable_inputs',
                f,
                additional_fields: %i[best_offer])

        .row
          .col-md-2 = f.input :code
          .col-md = f.input :title
          .col-md = f.input :slug

        .row
          .col-md-6
            = f.association :vat_rate,
                            collection: Boutique::VatRate.ordered,
                            include_blank: false

          - if Boutique.config.products_belong_to_site
            .col-md-6
              = f.association :site,
                              collection: Boutique::Product.sites_for_select,
                              include_blank: false

        == cell('folio/console/boutique/products/sti_fields', f)
        = f.input :digital_only

        = render partial: 'additional_fields', locals: { f: }

        = f.association :shipping_methods, remote: true
        = f.input :shipping_info, as: :redactor
        = f.input :description, as: :redactor
        = f.input :checkout_sidebar_content, as: :redactor

        .row
          .col-lg-3
            = f.input :regular_price
          .col-lg-3
            = f.input :discounted_price
          .col-lg-3
            = f.input :discounted_from, calendar_on_top: true
          .col-lg-3
            = f.input :discounted_until, calendar_on_top: true

    = render partial: 'variants', locals: { f: }

    = render partial: 'form_bottom', locals: { f: }

= form_footer f
